{"version":3,"sources":["main.js"],"names":["log","console","bind","e","selector","document","querySelector","html","string","newString","n","s","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";AAAA,IAAMA,EAAMC,QAAQD,IAAIE,KAAKD,SAEvBE,EAAI,SAAAC,GAAYC,OAAAA,SAASC,cAAcF,IAEvCG,EAAOJ,EAAE,SAEXK,EAAJ,ykCAqDIC,EAAY,GAEZC,EAAI,EACJC,EAAIR,EAAE,UACJS,EAAO,SAAPA,IACJC,WAAW,WAGTJ,GAA2B,OAAdD,EAAOE,GAAc,OAASF,EAAOE,GAElDH,EAAKO,UAAYL,EACjBE,EAAEG,UAAYN,EAAOO,UAAU,EAAGL,GAClCM,OAAOC,SAAS,EAAG,QACnBV,EAAKU,SAAS,EAAG,QACbP,EAAIF,EAAOU,OAAS,IACtBR,GAAQ,EACRE,MAED,KAGLA","file":"main.d1bc0ee0.js","sourceRoot":"../src","sourcesContent":["const log = console.log.bind(console);\n\nconst e = selector => document.querySelector(selector);\n\nconst html = e(\"#html\");\n\nlet string = `/*\n大家好，我是二心\n接下来我要展示一下前端功底\n首先准备一个 div\n*/\n#div1 {\n  border: 1px solid red;\n  width: 200px;\n  height: 200px;\n}\n/*\n接下来我把 div 变成一个八卦图\n首先把 div 变成一个圆\n*/\n#div1 {\n  border-radius: 50%;\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\n  border: none;\n}\n/*\n八卦是阴阳组成的\n一黑一白\n*/\n#div1 {\n  background: rgb(255,255,255);\n  background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\n}\n/* 加两个小球 */\n#div1::before {\n  width: 100px;\n  height: 100px;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #000;\n  border-radius: 50%;\n  background: rgb(255,255,255);\n  background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\n}\n#div1::after {\n  width: 100px;\n  height: 100px;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #fff;\n  border-radius: 50%;\n  background: rgb(0,0,0);\n  background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\n}\n`;\n// string = string.replace(/\\n/g, \"<br>\");\n\nlet newString = \"\";\n\nlet n = 0;\nlet s = e(\"#style\");\nconst step = () => {\n  setTimeout(() => {\n    // 如果是回车的话，将 br 累加到 newString 上\n    // 如果不是，将 string 累加到 newString 上\n    newString += string[n] === \"\\n\" ? \"<br>\" : string[n];\n\n    html.innerHTML = newString;\n    s.innerHTML = string.substring(0, n);\n    window.scrollTo(0, 999999);\n    html.scrollTo(0, 999999);\n    if (n < string.length - 1) {\n      n = n + 1;\n      step();\n    }\n  }, 50);\n};\n\nstep();\n"]}